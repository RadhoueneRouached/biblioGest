#menuVerticale{
	float: left;
	width: 200px;
	margin-top: 100px;
 	
}
/* ==============================================
   FEUILLE DE STYLES DES GABARITS HTML/CSS
   © Elephorm & Alsacreations.com
   Conditions d'utilisation:
   http://creativecommons.org/licenses/by/2.0/fr/
   ============================================== */


/* --- STYLES DE BASE POUR LE TEXTE ET LES PRINCIPAUX ÉLÉMENTS --- */

/* Page */
html {
	font-size: 100%; /* Voir -> Note 1 à la fin de la feuille de styles. */
}
body {
	margin: 0;
	padding: 10px 20px; /* Note -> 2 */
	font-family: Verdana, "Bitstream Vera Sans", "Lucida Grande", sans-serif; /* 3 */
	font-size: .8em; /* -> 4 */
	line-height: 1.25; /* -> 5 */
	color: black;
	background: white;
}

/* Titres */
h1, h2, h3, h4, h5, h6 {
	margin: 1em 0 .5em 0; /* -> 6 */
}
h1, h2 {
	font-family: Georgia, "Bitstream Vera Serif", Norasi, serif;
	font-weight: normal; /* -> 7 */
}
h1 {
	font-size: 3em; /* -> 8 */
	font-style: italic;
}
h2 {font-size: 1.8em;}
h3 {font-size: 1.2em;}
h4 {font-size: 1em;}

/* Listes */
ul, ol {
	margin: .75em 0 .75em 24px;
	padding: 0; /* -> 9 */
}
ul {
	list-style: square;
}
li {
	margin: 0;
	padding: 0;
}

/* Paragraphes */
p {
	margin: .75em 0;
}
li p, blockquote p {
	margin: .5em 0;
}

/* Citations */
blockquote, q {
	font-size: 1.1em;
	font-style: italic;
	font-family: Georgia, "Bitstream Vera Serif", Norasi, serif;
}
blockquote {
	margin: .75em 0 .75em 24px;
}
cite {
	font-style: italic;
}

/* Liens */
a {
	color: mediumblue;
	text-decoration: underline;
}
a:hover, a:focus {
	color: crimson;
}
a img {
	border: none; /* -> 10 */
}

/* Divers éléments de type en-ligne */
em {
	font-style: italic;
}
strong {
	font-weight: bold;
	color: dimgray;
}


/* --- STYLES POUR CERTAINS CONTENUS DES GABARITS --- */

pre, code {
	font-size: 100%;
	font-family: "Bitstream Vera Mono", "Lucida Console", "Courier New", monospace;
}
pre {
	width: 90%;
	overflow: auto;
	overflow-y: hidden;
	margin: .75em 0;
	padding: 12px;
	background: #eee;
	color: #555;
}
pre strong {
	font-weight: normal;
	color: black;
}
#copyright {
	margin: 20px 0 5px 0;
	text-align: right;
	font-size: .8em;
	color: #848F63;
}
#copyright a {
	color: #848F63;
	text-decoration: none;
}
#copyright a:hover, #copyright a:focus {
	text-decoration: underline;
}


/* --- NOTES ---

1.	Ce "font-size: 100%" est normalement inutile. On l'utilise uniquement
	pour éviter un bug de redimensionnement du texte dans Internet Explorer.

2.	Par défaut, les navigateurs ont un padding (ou, pour certains, un
	margin) de 6px pour l'élément BODY. C'est ce qui évite que le texte
	ne soit complètement collé aux bords de la zone de visualisation du
	navigateur lorsqu'on affiche une page «brute», sans mise en forme.
	Mais ce retrait de 6px est un peu faiblard: on le renforce donc.
	Notez bien que les feuilles de styles des gabarits pourront augmenter
	ce retrait, ou bien l'annuler.
	
3.	Voici quelques exemples de collections cohérentes de fontes (propriété
	CSS "font-family"):
	font-family: Arial, Helvetica, "Nimbus Sans L", sans-serif;
	font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
	font-family: Georgia, "Bitstream Vera Serif", Norasi, serif;
	font-family: "Times New Roman", Times, "Nimbus Roman No9 L", serif;
		
4.	Taille du texte de base de la page. Dépend de la taille du texte par
	défaut du navigateur (souvent 16px), et des réglages de l'utilisateur.
	À adapter en fonction de la fonte choisie, et du rendu souhaité.
	En général, on utilisera une valeur de base entre .65em et 1em
	(ou 65% et 100%).

5.	Hauteur de ligne. À adapter en fonction de la fonte choisie, et des
	besoins particuliers (lignes de texte longues ou courtes, titre ou
	corps de texte...).

6.	En général, les styles par défaut des navigateurs font que les marges
	en haut et en bas des titres sont équivalentes. Ici, en diminuant la
	marge du bas, on cherche à rapprocher le titre du contenu qu'il introduit.

7.	Les styles par défaut des navigateurs mettent les titres en gras.
	Si on souhaite passer à des caractères «normaux», on doit utiliser
	font-size: normal.

8.	Pour un élément en "font-size: 3em", la taille du texte sera le triple de
	la taille du texte de l'élément parent.
	À noter: on aurait pu écrire "font-size: 300%" pour le même résultat.

9.	Par défaut, les listes UL et OL ont un retrait à gauche qui peut être,
	suivant les navigateurs:
	- un padding-left de 40px;
	- ou bien un margin-left de 40px.
	On met tout le monde d'accord avec une marge à gauche de 24px, et pas
	de padding.

10.	Les navigateurs donnent souvent aux images placées dans des liens
	une bordure disgracieuse. On annule ce style souvent gênant en appliquant
	un "border: none" aux images qui se trouvent à l'intérieur d'un lien.

*/
/* ==============================================
   FEUILLE DE STYLES DES GABARITS HTML/CSS --- 07
   © Elephorm & Alsacreations.com
   Conditions d'utilisation:
   http://creativecommons.org/licenses/by/2.0/fr/
   ============================================== */


/* --- COULEURS --- */

/* Note: vous pouvez modifier simplement l'aspect de ce gabarit en modifiant
   uniquement les couleurs de fond (propriétés background) et les couleurs
   du texte (propriété color).
   Pour modifier la disposition des blocs, voir plus bas dans la feuille de
   styles la partie «positionnement». */

/* Général */
body {
	color: #F0E39E;
	background: #2C2F22;
}
a {
	color: #FF6533;
}
a:hover, a:focus {
	color: #FF4C00;
}
strong {
	color: #A1B55D;
}

/* Bloc central contenant #navigation et #contenu */
#centre {
	background: url(img/07-colonnes.png) repeat-y; /* Voir -> Note 1 */
}

/* Navigation */
#navigation {
	background: #181A12; /* -> 2 */
}
#navigation a {
	color: #FF6533;
}
#navigation a:hover, #navigation a:focus {
	background: #000000;
}

/* Contenu principal */
#contenu {
	color: #363B29;
	background: #cbd888; /* -> 2 */
}
#contenu a {
	color: #332510;
}
#contenu a:hover, #contenu a:focus {
	color: #6E5122;
}
#contenu strong {
	color: #181A12;
}


/* --- POSITIONNEMENT --- */

/* Page */
body {
	padding: 10px 5px;
}
#global {
	width: 750px; /* -> 3 */
	margin: 0 auto; /* -> 4 */
}

/* En-tête */
#entete {
	padding: 20px 20px 20px 0;
}
#entete h1 {
	margin: 0;
}
#entete h1 img {
	float: left;
	margin: 7px 20px 10px 0;
}
#entete .sous-titre {
	margin: 4px 0 15px 0;
}

/* Bloc central contenant #navigation et #contenu */
#centre {
	width: 100%; /* -> 5 */
	overflow: hidden; /* -> 5 */
}

/* Menu de navigation */
#navigation {
	width: 180px;
	float: left; /* -> 6 */
}
#navigation ul {
	margin: 0;
	padding: 20px 10px 20px 10px;
	list-style: none;
}
#navigation a {
	display: block;
	height: 1%; /* -> 7 */
	padding: 6px 10px 6px 10px;
	line-height: 1.5;
	font-size: .9em;
	text-decoration: none;
}

/* Contenu */
#contenu {
	margin-left: 200px; /* -> 8 */
	padding: 10px 20px;
}
#contenu > :first-child {
	margin-top: 10px;
}
#contenu p, #contenu li {
	line-height: 1.5;
}

/* Pied de page */
#pied {
	margin: 0;
	padding: 15px 20px 10px 0;
	font-size: .85em;
}

/* Mention de copyright */
#copyright {
	margin: 8px 0 0 0;
	font-size: 1em;
	text-align: left;
}


/* --- NOTES ---

1.	Dans ce gabarit, nous avons un conteneur div#centre, qui regroupe
	div#navigation et div#contenu uniquement. C'est ce conteneur que l'on
	utilise pour placer une image de fond répétée en hauteur, qui dessine
	le fond de la colonne de gauche et de la colonne de droite.
	Ainsi, quelle que soit la colonne la plus longue, on aura bien,
	visuellement, deux colonnes de hauteurs égales.

2.	On utilise ici des couleurs de fond pour div#navigation et div#contenu.
	Et pourtant, nous avons déjà une image de fond, sur div#centre, qui
	«dessine» nos deux colonnes. Pourquoi rajouter des couleurs de fond à
	ces blocs, alors? C'est en fait une sécurité, au cas où:
	- l'image de fond mettrait du temps à se charger (ça arrive);
	- l'image de fond ne peut pas être chargée (rare, mais ça arrive aussi).
	Ainsi, si ces problèmes surviennent, le contenu restera lisible. Notamment
	le contenu de div#contenu, qui est sombre, tandis que le fond de la page
	est déjà sombre.
	Notez que dans certains cas ce genre de «sécurité» sera difficile à mettre
	en place, par exemple parce que la couleur de fond des blocs masquerait
	une image de fond comportant des motifs.
	Mais, plus généralement, un bon design de site web devrait rester lisible
	même si les images sont désactivées (ce qui est une option de beaucoup
	de navigateurs).

3.	On utilise ici une largeur fixe de 750px. Pourquoi 750px? Parce que c'est
	une largeur dont on peut être à peu près sûr qu'elle passera sur un
	écran en 800x600 (résolution encore utilisée par une partie des
	internautes), sans générer de barre de défilement horizontal inutile.
	De plus, pour un site au contenu relativement réduit, cette largeur suffit
	généralement.
	Pour un site au contenu plus important, avec un design en trois colonnes
	par exemple, une largeur plus importante, telle que 900 ou 950px, peut
	être pertinente.

4.	Les marges automatiques à gauche et à droite permettent de centrer notre
	bloc div#global, et donc tout le site.
	Pour aligner div#global à gauche, on fera:
		margin-left: 0;
		margin-rigth: auto;
	Pour aligner div#global à droite, on fera:
		margin-left: auto;
		margin-right: 0;
	Pour aligner div#global à droite avec un retrait (à droite) de 100px:
		margin-left: auto;
		margin-right: 100px;

5.	On utilise ces propriétés pour empêcher le dépassement des flottants (cf.
	http://web.covertprestige.info/test/
	03-elements-flottants-et-element-parent-1.html).
	Le overflow:hidden crée un contexte de formatage qui vient contenir les
	flottants. Le width:100% a le même rôle, mais uniquement pour Internet
	Explorer 6 (utilisation du HasLayout). Dans l'idéal, on le placera avec
	des correctifs destinés à IE6 dans une feuille de styles appelée via un
	commentaire conditionnel.

6.	C'est la propriété "float" qui nous permet de placer deux blocs
	côte-à-côte. Notez bien que l'élément flottant (ici, notre menu de
	navigation) doit être placé en premier dans le code HTML. Il est
	préférable de lui donner une largeur, ce que nous faisons ici avec un
	"width: 180px;".

7.	Correction d'un bug d'Internet Explorer 6. Voir la dernière partie de
	http://blog.alsacreations.com/2006/10/20/294-impact-sur-le-rendu-de-la-
	mise-en-forme-du-code-html
	Dans l'idéal, on placera ce correctif dans une feuille séparée, appelée
	via un commentaire conditionnel visant IE6.

8.	Les éléments flottants ne repoussent pas les blocs, mais repoussent
	uniquement leur contenu. Pour que notre bloc de contenu principal forme
	une colonne distincte du menu, on lui donne donc une marge à gauche de
	200px.
	Il existe une autre technique pour adapter la largeur d'un bloc aux
	flottants qui le précèdent. On pourra lire l'article suivant:
		http://css.alsacreations.com/Faire-une-mise-en-page-sans-tableaux/
		design-trois-colonnes-positionnement-flottant

*/
